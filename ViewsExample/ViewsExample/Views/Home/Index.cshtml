@using ViewsExample.Models
<!--This means that this view is bound to this list of Person-->
@model IEnumerable<Person>
<!--Now its responsibility of the controller to Supply the Model Object-->
@*@model List<Person>*@  <!--IEnumerable is the parent of list-->
<!DOCTYPE html>
<html>
<head>
    @*<title>@ViewData["pageTitle"]</title>*@
    <title>@ViewBag.pageTitle</title>
    <meta charset="utf-8" />
    <link href="~/StyleSheet.css" rel="stylesheet" />
</head>
<body>
    <div class="page-content">
        <h1>Welcome</h1>
        @{
            //Value is object type so u have to typecast your people list
            //List<Person>? people = (List<Person>?)ViewData["people"];
        }
        @foreach (Person person in Model) //Access the person list using Model
        {

            <div class="box float-left w-50">
                <h3>
                    @* If you want intellisense to help you you must know the type of the variable in the foreach loop
                        for example here you must know its Person and not var, if you put var, Intellisense wont know the properties
                        of person*@
                    @person.Name
                </h3>
                <table class="table w-100">
                    <tbody>
                        <tr>
                            <td>Gender</td>
                            <td>@person.PersonGender</td>
                        </tr>
                        <tr>
                            <td>Date of Birth</td>
                            <td>@person.DateOfBirth?.ToString("MM/dd/yyyy")</td>
                        </tr>
                    </tbody>
                </table>
                <a href="/person-details/@person.Name">Details</a>
            </div>
        }
    </div>
</body>
</html>